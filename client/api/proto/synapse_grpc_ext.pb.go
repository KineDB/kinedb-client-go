// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.0.0
// - protoc             v3.21.2
// source: synapse.proto

package proto

import (
	context "context"
	errors "github.com/KineDB/kinedb-client-go/common/errors"
	proto "github.com/KineDB/kinedb-client-go/common/proto"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

type synapseServiceRemoteClient struct {
	c SynapseServiceClient
}

func NewSynapseServiceRemoteClient(cc grpc.ClientConnInterface) SynapseServiceClient {
	return &synapseServiceRemoteClient{NewSynapseServiceClient(cc)}
}

func (c *synapseServiceRemoteClient) Execute(ctx context.Context, in *proto.Statement, opts ...grpc.CallOption) (*proto.Results, error) {
	m, err := c.c.Execute(ctx, in, opts...)
	return m, errors.ConvertSynapseExceptionToGrpcError(err)
}

func (c *synapseServiceRemoteClient) StreamExecute(ctx context.Context, in *proto.Statement, opts ...grpc.CallOption) (SynapseService_StreamExecuteClient, error) {
	x, err := c.c.StreamExecute(ctx, in, opts...)
	return &synapseServiceStreamExecuteRemoteClient{x.(*synapseServiceStreamExecuteClient), x.(*synapseServiceStreamExecuteClient).ClientStream}, errors.ConvertSynapseExceptionToGrpcError(err)
}

type synapseServiceStreamExecuteRemoteClient struct {
	x *synapseServiceStreamExecuteClient
	grpc.ClientStream
}

func (x *synapseServiceStreamExecuteRemoteClient) Recv() (*proto.Results, error) {
	m, err := x.x.Recv()
	return m, errors.ConvertSynapseExceptionToGrpcError(err)
}

func _SynapseService_StreamExecute_HandlerExt(srv interface{}, stream grpc.ServerStream) error {
	m := new(proto.Statement)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SynapseServiceServer).StreamExecute(m, &synapseServiceStreamExecuteServerExt{stream})
}

type synapseServiceStreamExecuteServerExt struct {
	grpc.ServerStream
}

func (x *synapseServiceStreamExecuteServerExt) Send(m *proto.Results) error {
	err := x.ServerStream.SendMsg(m)
	return errors.ConvertSynapseExceptionToGrpcError(err)
}

func init() {
	SynapseService_ServiceDesc.Streams[0].Handler = _SynapseService_StreamExecute_HandlerExt
}
